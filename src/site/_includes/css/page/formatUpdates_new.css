/* Visually hide element accessibly) */
/* ! add to main css */
.sr-only:not(:focus):not(:active) {
  clip: rect(0 0 0 0); 
  clip-path: inset(50%);
  height: 1px;
  overflow: hidden;
  position: absolute;
  white-space: nowrap; 
  width: 1px;
}

/* misc styles */
.newBodyGrid main > header {
  margin-block-end: 1.5em;
}
.description ul > li {
  margin-block-end: .5em;
}
.description li > ul {
  margin-block-start: .5em;
}

/* place contents in grid */
.formatUpdates.textcol {
  width: 100%;
  margin: 0;
  padding-inline-end: 30px;
  display: grid;
  grid-template-columns: 310px auto;
}

.formatUpdates > header,
.formatUpdates > .description {
  width: 600px;
}
.description {
  margin-block-end: 1em;
}

.formatUpdates > * {
  grid-column: 2;
}
.formatUpdates > .sideImage {
  grid-column: 1;
  grid-row: 1 / 3;
}
.formatUpdates > #toc {
  grid-column: 1;
  grid-row: span 2;
}

/* toc sidebar */
#toc > ol {
  list-style-type: lower-roman;
}
#toc > ol ol {
  list-style-type: circle;
}

/* sticky toc */
#toc {
  position: sticky;
  top: 0;
  max-height: 100vh;
  overflow-y: scroll;
  margin: 0 30px;
}
/* heading & 'back to the top' link */
#toc .toc-header {
  position: sticky;
  top: 0;
  padding-block-start: 1em;
  background-color: #17141D;
  box-shadow: 0 0 0.5em 0.25em #17141D;
  z-index: 10;
  display: flex;
    align-items: center;
    justify-content: space-around;
}
#toc .toc-header h3 {
  margin: 0;
}
#toc #top-link span { /* â†‘ button */
  display: flex;
  justify-content: center;
  align-items: center;
  font-size: 1.25em;
  width: 1.5em; height: 1.5em; /* based on font-size */
  border-radius: .25em;
  background-color: grey;
  color: white;
}
#toc #top-link:hover span,
#toc #top-link:focus span {
  background-color: lightgrey;
  color: revert;
  box-shadow: 0 0 4px 0px rgba(250, 250, 250, .8); 
}

/* filters styles */
#filters {
  display: flex;
    flex-wrap: wrap;
  /* display: grid; */
    /* grid-template-columns: auto 1fr; */
    gap: 1em 3em;
    justify-items: start;
}
#factionFilters,
#rarityFilters {
  grid-column: span 2;
}
#filters fieldset {
  margin: 0; padding: .25em .5em;
  border: 0;
  border-top: 1px solid #f8c368;
  width: min-content;
}
#filters legend {
  padding: 0 0.5em;
  margin-inline-start: 1em;
  font-family: Lato,'Helvetica Neue',Arial,Helvetica,sans-serif;
  font-size: 1em;
  width: max-content;
}

.filterSet {
  margin: 0; padding: 0;
  display: flex;
    /* gap: 2em; /* gap on flexbox isn't supported in Chrome yet, using margin-left on children instead */
  list-style: none;
}
.filter.checkbox:not(:first-child),
.filter.pillbox:not(:first-child) {
  margin-left: 2em;
}

.filter label > span {
  padding: .1em;
}
.filter {
  --iconSize: 1.5em;
}
.pillbox {
  --pillSize: 1em; /* added to '--iconSize' */
}
.filter label,
.filter label > span {
  display: flex;
    /* gap: .5ch; /* gap on flexbox isn't supported in Chrome yet, using margin-right on children instead */
  align-items: center;
  position: relative; /* lets inner elements be positioned relative to parent */
  width: max-content;
}
.checkbox label > span::before,
.pillbox label > span::before {
  margin-right: .5ch;
}

.checkbox label > span::before,
.pillbox label > span::before,
.pillbox label > span::after {
  content: "";
  display: inline-block;
  width: var(--iconSize); height: var(--iconSize);
}
.filter input[type="checkbox"],
.radio-select input[type="radio"] {
  position: absolute;
  width: var(--iconSize); height: var(--iconSize);
  opacity: 0;
}

/* pillbox toggles */
.pillbox label > span::before {
  width: calc(var(--iconSize) + var(--pillSize));
  border-radius: calc(var(--iconSize)/2);
  background-color: grey;
}
.pillbox input[type="checkbox"] {
  width: calc(var(--iconSize) + var(--pillSize));
}
.pillbox label > span::after {
  position: absolute;
    left: calc(var(--iconSize) * .125);
  width: calc(var(--iconSize) * .75); height: calc(var(--iconSize) * .75);
  border-radius: 50%;
  background-color: white;
  box-shadow: 0 0 2px 0px rgba(0, 0, 0, .5);
  transition: transform .1s ease-in-out;
}
.pillbox label > input[type="checkbox"]:checked + span::after {
  transform: translateX(calc(var(--pillSize) + ( var(--iconSize) * .125 )));
}

/* faction checkbox filters */
#factionFilters label > span::before {
  background-size: cover;
  border-radius: 50%;
}

.fire::before { background-image: url(/images/icon-fire.png); }
.time::before { background-image: url(/images/icon-time.png); }
.justice::before { background-image: url(/images/icon-justice.png); }
.primal::before { background-image: url(/images/icon-primal.png); }
.shadow::before { background-image: url(/images/icon-shadow.png); }
.neutral::before { background-image: url(/images/icon-neutral.png); }
.mixed::before { background-image: url(/images/icon-mixed.png); }

/* rarity checkbox filters */
#rarityFilters label > span::before {
  background-size: cover;
  border-radius: 50%;
}

.common::before { background-image: url(/images/icon-common.png); }
.uncommon::before { background-image: url(/images/icon-uncommon.png); }
.rare::before { background-image: url(/images/icon-rare.png); }
.legendary::before { background-image: url(/images/icon-legendary.png); }
.promo::before { background-image: url(/images/icon-promo.png); }

/* hide the promo rarity while in 'draft' mode (promos shouldn't appear in draft anyway) */
[data-show-format="draft"] .promo {
  opacity: 50%;
}

/* format toggle */
.radioSet {
  gap: 0;
  --border-radius: 1em;
}
.radio-select input[type="radio"] {
  width: 100%;
}
.radio-select {
  padding: .25em .5em;
  border: 1px solid grey;
}
.radio-select:not(:first-child) {
  border-left: 0;
}
.filter.radio-select:first-child {
  border-radius: var(--border-radius) 0 0 var(--border-radius);
  padding-left: 1em;
}
.filter.radio-select:last-child {
  border-radius: 0 var(--border-radius) var(--border-radius) 0;
  padding-inline-end: 1em;
}

/* visual cues */
.radio-select:hover, .radio-select:focus-within,
.filter input[type="checkbox"]:hover + span::before,
.filter input[type="checkbox"]:focus + span::before {
  /* box-shadow: 0 0 4px 0px rgba(250, 250, 250, .8); */
  filter: drop-shadow(0px 0px 3px rgba(250, 250, 250, .8));
}
.filter input[type="checkbox"]:not(:checked) + span,
.radio-select input[type="radio"]:not(:checked) + span {
  opacity: 50%;
}

/* filter actions - hide sections according to the wrapper element's "show" lists */
/* hide states not included in the "show-states" lists */
[data-show-states]:not([data-show-states~="Kept"]) [data-state="Kept"],
[data-show-states]:not([data-show-states~="Added"]) [data-state="Added"],
[data-show-states]:not([data-show-states~="Removed"]) [data-state="Removed"] {
  display: none;
}
/* hide factions not included in the "show-factions" lists */
[data-show-factions]:not([data-show-factions~="Fire"]) [data-factions~="Fire"],
[data-show-factions]:not([data-show-factions~="Time"]) [data-factions~="Time"],
[data-show-factions]:not([data-show-factions~="Justice"]) [data-factions~="Justice"],
[data-show-factions]:not([data-show-factions~="Primal"]) [data-factions~="Primal"],
[data-show-factions]:not([data-show-factions~="Shadow"]) [data-factions~="Shadow"],
[data-show-factions]:not([data-show-factions~="Neutral"]) [data-factions~="Neutral"],
[data-show-factions]:not([data-show-factions~="Mixed"]) [data-factions~="Mixed"] {
  display: none;
}
/* hide rarities not included in the "show-rarities" lists */
[data-show-rarities]:not([data-show-rarities~="Common"]) [data-rarity~="Common"],
[data-show-rarities]:not([data-show-rarities~="Uncommon"]) [data-rarity~="Uncommon"],
[data-show-rarities]:not([data-show-rarities~="Rare"]) [data-rarity~="Rare"],
[data-show-rarities]:not([data-show-rarities~="Legendary"]) [data-rarity~="Legendary"],
[data-show-rarities]:not([data-show-rarities~="Promo"]) [data-rarity~="Promo"] {
  display: none;
}
/* hide weightings not included in the "show-weightings" lists, while in the 'draft' format */
[data-show-format="draft"][data-show-weightings]:not([data-show-weightings~="1"]) [data-weight-after~="1"],
[data-show-format="draft"][data-show-weightings]:not([data-show-weightings~="5"]) [data-weight-after~="5"],
[data-show-format="draft"][data-show-weightings]:not([data-show-weightings~="10"]) [data-weight-after~="10"],
[data-show-format="draft"][data-show-weightings]:not([data-show-weightings~="20"]) [data-weight-after~="20"] {
  display: none;
}
/* hide weighting changess not included in the "show-weighting-changes" lists, while in the 'draft' format */
[data-show-format="draft"][data-show-draft-kept-changes]:not([data-show-draft-kept-changes~="None"]) [data-draft-kept-change~="None"],
[data-show-format="draft"][data-show-draft-kept-changes]:not([data-show-draft-kept-changes~="Raised"]) [data-draft-kept-change~="Raised"],
[data-show-format="draft"][data-show-draft-kept-changes]:not([data-show-draft-kept-changes~="Lowered"]) [data-draft-kept-change~="Lowered"] {
  display: none;
}

[data-show-format="draft"]:not([data-show-states~="Kept"]) #weightingChangeFilters {
  display: none;
}

/* hide format not specified in the "show-format" value */
[data-show-format="expedition"] .card:not([data-expedition-state]) {
  display: none;
}
[data-show-format="draft"] .card:not([data-draft-state]) {
  display: none;
}

/* style card sections */
.cardList {
  --cardsize: 140px;
  margin: 0; padding: 0;
  list-style: none;
  display: grid;
    grid-template-columns: repeat(auto-fill, minmax(var(--cardsize), 1fr));
    gap: 1rem;
}

.faction {
  padding-block-start: 1em;
}

.faction h2 {
  --bannerColor2: transparent;
}
h2#Fire { --bannerColor1: var(--FireRed); }
h2#Time { --bannerColor1: var(--TimeYellow); }
h2#Justice { --bannerColor1: var(--JusticeGreen); }
h2#Primal { --bannerColor1: var(--PrimalBlue); }
h2#Shadow { --bannerColor1: var(--ShadowPurple); }
h2#Mixed { --bannerColor1: var(--MultiBlack); }
h2#Neutral { --bannerColor1: var(--NeutralGray); }

h2#Praxis { --bannerColor1: var(--FireRed); --bannerColor2: var(--TimeYellow); }
h2#Combrei { --bannerColor1: var(--TimeYellow); --bannerColor2: var(--JusticeGreen); }
h2#Hooru { --bannerColor1: var(--JusticeGreen); --bannerColor2: var(--PrimalBlue); }
h2#Feln { --bannerColor1: var(--PrimalBlue); --bannerColor2: var(--ShadowPurple); }
h2#Stonescar { --bannerColor1: var(--FireRed); --bannerColor2: var(--ShadowPurple); }
h2#Rakano { --bannerColor1: var(--FireRed); --bannerColor2: var(--JusticeGreen); }
h2#Elysian { --bannerColor1: var(--TimeYellow); --bannerColor2: var(--PrimalBlue); }
h2#Argenport { --bannerColor1: var(--JusticeGreen); --bannerColor2: var(--ShadowPurple); }
h2#Skycrag { --bannerColor1: var(--FireRed); --bannerColor2: var(--PrimalBlue); }
h2#Xenan { --bannerColor1: var(--TimeYellow); --bannerColor2: var(--ShadowPurple); }

.faction h2::after {
  content: "";
  display: block;
  position: relative;
    top: 0px;
  width: 100%; height: .75em;
  background-image: linear-gradient(90deg,var(--bannerColor1),var(--bannerColor2));
  border-bottom: 2px solid #3c3a3a;
}

.state {
  margin-block-end: 2em;
}

/* style cards */
.card {
  position: relative;
  display: grid; /* previously used 'position: absolute' on child h4, but didn't overlap as wanted on Chrome */
    grid-template-columns: 1fr;
    align-items: start;
    justify-items: start;
}
.card > h4,
.card .card-info {
  margin: 0;
  grid-row-start: 1;
  grid-column-start: 1;
}
.card h4 {
  color: transparent;
  z-index: 1;
}
.card:focus h4, .card:active h4 {
  color: white; /* color: revert doesn't work on Chrome */
  color: revert;
  background-color: red;
}
.card dd {
  margin: 0;
}
.card img {
  width: 100%;
  max-width: 100%;
  height: auto;
}

/* draft pack weightings */
[data-show-format="expedition"]  .draft-weights {
  display: none;
}
.weighting-info {
  position: absolute;
  bottom: .5em;
  display: grid;
    align-items: end;
  --weighting-info-size: 3.2em;
  width: var(--weighting-info-size); height: var(--weighting-info-size);
  border-radius: 0.5em;
  overflow: hidden;
  background: green;
  box-shadow: 0 0 4px 1px rgba(0,0,0,0.5);
}
.weighting {
  display: flex;
    gap: .2ch;
    justify-content: center;
    align-items: baseline;
}
.weighting dt::after {
  content: ":";
}
.weighting dd::after {
  content: "Ã—";
}
.weighting.after {
  font-size: 1.2em;
  background-color: inherit;
}
.weighting.before {
  font-size: .8em;
  background-color: #424242;
}
.weighting.before dt {
  font-size: .9em;
}

.card[data-weight-after="-"] .weighting-info,
.card[data-weight-before="-"] .weighting.before {
  background-color: black;
}
.card[data-weight-after="-"] .weighting.after dd::after,
.card[data-weight-before="-"] .weighting.before dd::after {
  content:none;
}